{"version":3,"sources":["App.js","index.js"],"names":["App","state","uri","script","output","handleURIChange","bind","handleEditorChange","handleSubmit","event","target","value","this","setState","prev","preventDefault","fetch","method","body","JSON","stringify","response","json","data","console","log","message","fail","statusCode","className","onSubmit","type","name","onChange","mode","theme","style","width","height","Component","ReactDOM","render","document","getElementById"],"mappings":"6TAyEeA,G,8DA5Db,aAAe,IAAD,8BACZ,gBAPFC,MAAQ,CACNC,IAAK,kEACLC,OAAQ,GACRC,OAAQ,IAKR,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAJR,E,4DAOEG,GAAQ,IACPP,EAAQO,EAAMC,OAArBC,MACRC,KAAKC,UAAS,SAAAC,GAAI,kCAAUA,GAAV,IAAgBZ,a,yCAGjBC,GACjBS,KAAKC,UAAS,SAAAC,GAAI,kCAAUA,GAAV,IAAgBX,gB,4EAGjBM,G,kFACjBA,EAAMM,iB,SAEiBC,MAAM,kBAAmB,CAC9CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBlB,IAAKU,KAAKX,MAAMC,IAChBC,OAAQS,KAAKX,MAAME,W,cAJjBkB,E,gBAOaA,EAASC,O,OAAtBC,E,OACNC,QAAQC,IAAIF,GACNnB,EAASmB,EAAKG,SAAWP,KAAKC,UAAUG,GAC9CX,KAAKC,UAAS,SAAAC,GAAI,kCACbA,GADa,IACPV,SAAQuB,KAAOJ,EAAKK,YAAcL,EAAKK,YAAc,S,uIAKhE,OACE,yBAAKC,UAAU,OACb,0BAAMC,SAAUlB,KAAKJ,cACnB,2BAAOqB,UAAU,eACfE,KAAK,OACLC,KAAK,MACLrB,MAAOC,KAAKX,MAAMC,IAClB+B,SAAUrB,KAAKP,kBAEjB,kBAAC,IAAD,CACE6B,KAAK,aACLC,MAAM,WACNH,KAAK,SACLI,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAC/B3B,MAAOC,KAAKX,MAAME,OAClB8B,SAAUrB,KAAKL,qBAEjB,4BAAQsB,UAAU,mBAAlB,YAEF,uBAAGA,UAAW,UAAYjB,KAAKX,MAAM0B,KAAO,UAAU,KAAMf,KAAKX,MAAMG,a,GA7D7DmC,cCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bbdbfef2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AceEditor from 'react-ace';\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nclass App extends Component {\n  state = {\n    uri: 'mongodb+srv://<user>:<pass>@cluster0.vlgea.mongodb.net/<dbname>',\n    script: '',\n    output: '',\n  };\n\n  constructor() {\n    super();\n    this.handleURIChange = this.handleURIChange.bind(this);\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleURIChange(event) {\n    const { value: uri } = event.target;\n    this.setState(prev => ({ ...prev, uri }));\n  }\n\n  handleEditorChange(script) {\n    this.setState(prev => ({ ...prev, script }));\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    const response = await fetch('/api/v1/execute', {\n      method: 'POST',\n      body: JSON.stringify({\n        uri: this.state.uri,\n        script: this.state.script,\n      }),\n    });\n    const data = await response.json();\n    console.log(data)\n    const output = data.message || JSON.stringify(data);\n    this.setState(prev => ({\n      ...prev, output, fail: (data.statusCode && data.statusCode >= 300)\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"app\" >\n        <form onSubmit={this.handleSubmit} >\n          <input className=\"form-control\"\n            type=\"text\"\n            name=\"uri\"\n            value={this.state.uri}\n            onChange={this.handleURIChange}\n          />\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"terminal\"\n            name=\"script\"\n            style={{width: \"100%\", height: \"50vh\"}}\n            value={this.state.script}\n            onChange={this.handleEditorChange}\n          />\n          <button className=\"btn btn-success\">Execute</button>\n        </form>\n        <p className={\"output\" + (this.state.fail ? \" failed\":\"\")}>{this.state.output}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}